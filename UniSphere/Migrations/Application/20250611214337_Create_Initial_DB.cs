// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore.Migrations;
using UniSphere.Api.Entities;

#nullable disable

namespace UniSphere.Api.Migrations.Application
{
    /// <inheritdoc />
    public partial class Create_Initial_DB : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.EnsureSchema(
                name: "uni_sphere");

            migrationBuilder.CreateTable(
                name: "EnrollmentStatuses",
                schema: "uni_sphere",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uuid", nullable: false),
                    Name = table.Column<MultilingualText>(type: "jsonb", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_EnrollmentStatuses", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "Instructors",
                schema: "uni_sphere",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uuid", nullable: false),
                    FirstName = table.Column<MultilingualText>(type: "jsonb", nullable: false),
                    LastName = table.Column<MultilingualText>(type: "jsonb", nullable: false),
                    FatherName = table.Column<MultilingualText>(type: "jsonb", nullable: true),
                    Email = table.Column<string>(type: "character varying(256)", maxLength: 256, nullable: false),
                    Password = table.Column<string>(type: "character varying(256)", maxLength: 256, nullable: false),
                    Image = table.Column<string>(type: "text", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Instructors", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "Labs",
                schema: "uni_sphere",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uuid", nullable: false),
                    Name = table.Column<MultilingualText>(type: "jsonb", nullable: false),
                    Description = table.Column<MultilingualText>(type: "jsonb", nullable: true),
                    Image = table.Column<string>(type: "text", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Labs", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "Professors",
                schema: "uni_sphere",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uuid", nullable: false),
                    FirstName = table.Column<MultilingualText>(type: "jsonb", nullable: false),
                    LastName = table.Column<MultilingualText>(type: "jsonb", nullable: false),
                    Image = table.Column<string>(type: "text", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Professors", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "Universities",
                schema: "uni_sphere",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uuid", nullable: false),
                    Name = table.Column<MultilingualText>(type: "jsonb", nullable: false),
                    Type = table.Column<MultilingualText>(type: "jsonb", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Universities", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "InstructorLabLink",
                schema: "uni_sphere",
                columns: table => new
                {
                    InstructorId = table.Column<Guid>(type: "uuid", nullable: false),
                    LabId = table.Column<Guid>(type: "uuid", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_InstructorLabLink", x => new { x.InstructorId, x.LabId });
                    table.ForeignKey(
                        name: "FK_InstructorLabLink_Instructors_InstructorId",
                        column: x => x.InstructorId,
                        principalSchema: "uni_sphere",
                        principalTable: "Instructors",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_InstructorLabLink_Labs_LabId",
                        column: x => x.LabId,
                        principalSchema: "uni_sphere",
                        principalTable: "Labs",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "Faculties",
                schema: "uni_sphere",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uuid", nullable: false),
                    Name = table.Column<MultilingualText>(type: "jsonb", nullable: false),
                    UniversityId = table.Column<Guid>(type: "uuid", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Faculties", x => x.Id);
                    table.ForeignKey(
                        name: "FK_Faculties_Universities_UniversityId",
                        column: x => x.UniversityId,
                        principalSchema: "uni_sphere",
                        principalTable: "Universities",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "Majors",
                schema: "uni_sphere",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uuid", nullable: false),
                    Name = table.Column<MultilingualText>(type: "jsonb", nullable: false),
                    FacultyId = table.Column<Guid>(type: "uuid", nullable: false),
                    NumberOfYears = table.Column<int>(type: "integer", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Majors", x => x.Id);
                    table.ForeignKey(
                        name: "FK_Majors_Faculties_FacultyId",
                        column: x => x.FacultyId,
                        principalSchema: "uni_sphere",
                        principalTable: "Faculties",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "Schedules",
                schema: "uni_sphere",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uuid", nullable: false),
                    MajorId = table.Column<Guid>(type: "uuid", nullable: false),
                    Year = table.Column<int>(type: "integer", nullable: false),
                    ScheduleDate = table.Column<DateTime>(type: "timestamp with time zone", nullable: false),
                    FacultyId = table.Column<Guid>(type: "uuid", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Schedules", x => x.Id);
                    table.ForeignKey(
                        name: "FK_Schedules_Faculties_FacultyId",
                        column: x => x.FacultyId,
                        principalSchema: "uni_sphere",
                        principalTable: "Faculties",
                        principalColumn: "Id");
                    table.ForeignKey(
                        name: "FK_Schedules_Majors_MajorId",
                        column: x => x.MajorId,
                        principalSchema: "uni_sphere",
                        principalTable: "Majors",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "StudentCredentials",
                schema: "uni_sphere",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uuid", nullable: false),
                    FacultyId = table.Column<Guid>(type: "uuid", nullable: false),
                    MajorId = table.Column<Guid>(type: "uuid", nullable: false),
                    Email = table.Column<string>(type: "character varying(100)", maxLength: 100, nullable: false),
                    OneTimeCode = table.Column<int>(type: "integer", nullable: true),
                    FirstName = table.Column<MultilingualText>(type: "jsonb", nullable: false),
                    LastName = table.Column<MultilingualText>(type: "jsonb", nullable: false),
                    FatherName = table.Column<MultilingualText>(type: "jsonb", nullable: true),
                    Year = table.Column<int>(type: "integer", nullable: false),
                    EnrollmentStatusId = table.Column<Guid>(type: "uuid", nullable: false),
                    Image = table.Column<string>(type: "text", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_StudentCredentials", x => new { x.Id, x.FacultyId });
                    table.ForeignKey(
                        name: "FK_StudentCredentials_EnrollmentStatuses_EnrollmentStatusId",
                        column: x => x.EnrollmentStatusId,
                        principalSchema: "uni_sphere",
                        principalTable: "EnrollmentStatuses",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_StudentCredentials_Majors_MajorId",
                        column: x => x.MajorId,
                        principalSchema: "uni_sphere",
                        principalTable: "Majors",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "Subjects",
                schema: "uni_sphere",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uuid", nullable: false),
                    Name = table.Column<MultilingualText>(type: "jsonb", nullable: false),
                    MajorId = table.Column<Guid>(type: "uuid", nullable: false),
                    LabId = table.Column<Guid>(type: "uuid", nullable: true),
                    Description = table.Column<MultilingualText>(type: "jsonb", nullable: true),
                    Year = table.Column<int>(type: "integer", nullable: false),
                    Semester = table.Column<int>(type: "integer", nullable: false),
                    MidtermGrade = table.Column<int>(type: "integer", nullable: false, defaultValue: 30),
                    FinalGrade = table.Column<int>(type: "integer", nullable: false, defaultValue: 70),
                    IsLabRequired = table.Column<bool>(type: "boolean", nullable: false, defaultValue: false),
                    IsMultipleChoice = table.Column<bool>(type: "boolean", nullable: false, defaultValue: false),
                    IsOpenBook = table.Column<bool>(type: "boolean", nullable: false, defaultValue: false),
                    Image = table.Column<string>(type: "text", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Subjects", x => x.Id);
                    table.ForeignKey(
                        name: "FK_Subjects_Labs_LabId",
                        column: x => x.LabId,
                        principalSchema: "uni_sphere",
                        principalTable: "Labs",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_Subjects_Majors_MajorId",
                        column: x => x.MajorId,
                        principalSchema: "uni_sphere",
                        principalTable: "Majors",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateTable(
                name: "Lectures",
                schema: "uni_sphere",
                columns: table => new
                {
                    Id = table.Column<Guid>(type: "uuid", nullable: false),
                    ScheduleId = table.Column<Guid>(type: "uuid", nullable: false),
                    SubjectName = table.Column<MultilingualText>(type: "jsonb", nullable: false),
                    LecturerName = table.Column<MultilingualText>(type: "jsonb", nullable: false),
                    StartTime = table.Column<TimeSpan>(type: "interval", nullable: false),
                    EndTime = table.Column<TimeSpan>(type: "interval", nullable: false),
                    LectureHall = table.Column<MultilingualText>(type: "jsonb", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Lectures", x => x.Id);
                    table.ForeignKey(
                        name: "FK_Lectures_Schedules_ScheduleId",
                        column: x => x.ScheduleId,
                        principalSchema: "uni_sphere",
                        principalTable: "Schedules",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "SubjectProfessorLinks",
                schema: "uni_sphere",
                columns: table => new
                {
                    SubjectId = table.Column<Guid>(type: "uuid", nullable: false),
                    ProfessorId = table.Column<Guid>(type: "uuid", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SubjectProfessorLinks", x => new { x.SubjectId, x.ProfessorId });
                    table.ForeignKey(
                        name: "FK_SubjectProfessorLinks_Professors_ProfessorId",
                        column: x => x.ProfessorId,
                        principalSchema: "uni_sphere",
                        principalTable: "Professors",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_SubjectProfessorLinks_Subjects_SubjectId",
                        column: x => x.SubjectId,
                        principalSchema: "uni_sphere",
                        principalTable: "Subjects",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "SubjectStudentLinks",
                schema: "uni_sphere",
                columns: table => new
                {
                    SubjectId = table.Column<Guid>(type: "uuid", nullable: false),
                    StudentId = table.Column<Guid>(type: "uuid", nullable: false),
                    FacultyId = table.Column<Guid>(type: "uuid", nullable: false),
                    AttemptNumber = table.Column<int>(type: "integer", nullable: false, defaultValue: 1),
                    MidtermGrade = table.Column<int>(type: "integer", nullable: true),
                    FinalGrade = table.Column<int>(type: "integer", nullable: true),
                    IsCurrentlyEnrolled = table.Column<bool>(type: "boolean", nullable: false, defaultValue: false),
                    IsPassed = table.Column<bool>(type: "boolean", nullable: true),
                    Notes = table.Column<MultilingualText>(type: "jsonb", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_SubjectStudentLinks", x => new { x.SubjectId, x.StudentId, x.FacultyId });
                    table.ForeignKey(
                        name: "FK_SubjectStudentLinks_StudentCredentials_StudentId_FacultyId",
                        columns: x => new { x.StudentId, x.FacultyId },
                        principalSchema: "uni_sphere",
                        principalTable: "StudentCredentials",
                        principalColumns: new[] { "Id", "FacultyId" },
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_SubjectStudentLinks_Subjects_SubjectId",
                        column: x => x.SubjectId,
                        principalSchema: "uni_sphere",
                        principalTable: "Subjects",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Restrict);
                });

            migrationBuilder.CreateIndex(
                name: "IX_Faculties_UniversityId",
                schema: "uni_sphere",
                table: "Faculties",
                column: "UniversityId");

            migrationBuilder.CreateIndex(
                name: "IX_InstructorLabLink_LabId",
                schema: "uni_sphere",
                table: "InstructorLabLink",
                column: "LabId");

            migrationBuilder.CreateIndex(
                name: "IX_Lectures_ScheduleId",
                schema: "uni_sphere",
                table: "Lectures",
                column: "ScheduleId");

            migrationBuilder.CreateIndex(
                name: "IX_Majors_FacultyId",
                schema: "uni_sphere",
                table: "Majors",
                column: "FacultyId");

            migrationBuilder.CreateIndex(
                name: "IX_Schedules_FacultyId",
                schema: "uni_sphere",
                table: "Schedules",
                column: "FacultyId");

            migrationBuilder.CreateIndex(
                name: "IX_Schedules_MajorId",
                schema: "uni_sphere",
                table: "Schedules",
                column: "MajorId");

            migrationBuilder.CreateIndex(
                name: "IX_StudentCredentials_EnrollmentStatusId",
                schema: "uni_sphere",
                table: "StudentCredentials",
                column: "EnrollmentStatusId");

            migrationBuilder.CreateIndex(
                name: "IX_StudentCredentials_MajorId",
                schema: "uni_sphere",
                table: "StudentCredentials",
                column: "MajorId");

            migrationBuilder.CreateIndex(
                name: "IX_SubjectProfessorLinks_ProfessorId",
                schema: "uni_sphere",
                table: "SubjectProfessorLinks",
                column: "ProfessorId");

            migrationBuilder.CreateIndex(
                name: "IX_Subjects_LabId",
                schema: "uni_sphere",
                table: "Subjects",
                column: "LabId");

            migrationBuilder.CreateIndex(
                name: "IX_Subjects_MajorId",
                schema: "uni_sphere",
                table: "Subjects",
                column: "MajorId");

            migrationBuilder.CreateIndex(
                name: "IX_SubjectStudentLinks_StudentId_FacultyId",
                schema: "uni_sphere",
                table: "SubjectStudentLinks",
                columns: new[] { "StudentId", "FacultyId" });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "InstructorLabLink",
                schema: "uni_sphere");

            migrationBuilder.DropTable(
                name: "Lectures",
                schema: "uni_sphere");

            migrationBuilder.DropTable(
                name: "SubjectProfessorLinks",
                schema: "uni_sphere");

            migrationBuilder.DropTable(
                name: "SubjectStudentLinks",
                schema: "uni_sphere");

            migrationBuilder.DropTable(
                name: "Instructors",
                schema: "uni_sphere");

            migrationBuilder.DropTable(
                name: "Schedules",
                schema: "uni_sphere");

            migrationBuilder.DropTable(
                name: "Professors",
                schema: "uni_sphere");

            migrationBuilder.DropTable(
                name: "StudentCredentials",
                schema: "uni_sphere");

            migrationBuilder.DropTable(
                name: "Subjects",
                schema: "uni_sphere");

            migrationBuilder.DropTable(
                name: "EnrollmentStatuses",
                schema: "uni_sphere");

            migrationBuilder.DropTable(
                name: "Labs",
                schema: "uni_sphere");

            migrationBuilder.DropTable(
                name: "Majors",
                schema: "uni_sphere");

            migrationBuilder.DropTable(
                name: "Faculties",
                schema: "uni_sphere");

            migrationBuilder.DropTable(
                name: "Universities",
                schema: "uni_sphere");
        }
    }
}
