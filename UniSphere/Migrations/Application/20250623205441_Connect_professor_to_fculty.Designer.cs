// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using UniSphere.Api.Database;
using UniSphere.Api.Entities;

#nullable disable

namespace UniSphere.Api.Migrations.Application
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250623205441_Connect_professor_to_fculty")]
    partial class Connect_professor_to_fculty
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("uni_sphere")
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("UniSphere.Api.Entities.Admin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<MultilingualText>("FirstName")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("first_name");

                    b.Property<string>("Gmail")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("gmail");

                    b.Property<MultilingualText>("LastName")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("last_name");

                    b.Property<Guid>("MajorId")
                        .HasColumnType("uuid")
                        .HasColumnName("major_id");

                    b.Property<int?>("OneTimeCode")
                        .HasColumnType("integer")
                        .HasColumnName("one_time_code");

                    b.Property<DateTime?>("OneTimeCodeCreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("one_time_code_created_date");

                    b.Property<int?>("OneTimeCodeExpirationInMinutes")
                        .HasColumnType("integer")
                        .HasColumnName("one_time_code_expiration_in_minutes");

                    b.HasKey("Id")
                        .HasName("pk_admins");

                    b.HasIndex("MajorId")
                        .HasDatabaseName("ix_admins_major_id");

                    b.ToTable("admins", "uni_sphere");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.EnrollmentStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<MultilingualText>("Name")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_enrollment_statuses");

                    b.ToTable("enrollment_statuses", "uni_sphere");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.Faculty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("DaysToTheFinale")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("days_to_the_finale");

                    b.Property<MultilingualText>("Name")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("name");

                    b.Property<Guid>("UniversityId")
                        .HasColumnType("uuid")
                        .HasColumnName("university_id");

                    b.HasKey("Id")
                        .HasName("pk_faculties");

                    b.HasIndex("UniversityId")
                        .HasDatabaseName("ix_faculties_university_id");

                    b.ToTable("faculties", "uni_sphere");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.FacultyAnnouncement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<MultilingualText>("Content")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("content");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<Guid>("FacultyId")
                        .HasColumnType("uuid")
                        .HasColumnName("faculty_id");

                    b.Property<MultilingualText>("Title")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("pk_faculty_announcements");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("ix_faculty_announcements_created_at");

                    b.HasIndex("FacultyId")
                        .HasDatabaseName("ix_faculty_announcements_faculty_id");

                    b.ToTable("faculty_announcements", "uni_sphere");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.Instructor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("email");

                    b.Property<MultilingualText>("FatherName")
                        .HasColumnType("jsonb")
                        .HasColumnName("father_name");

                    b.Property<MultilingualText>("FirstName")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("first_name");

                    b.Property<string>("Image")
                        .HasColumnType("text")
                        .HasColumnName("image");

                    b.Property<MultilingualText>("LastName")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("last_name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("password");

                    b.HasKey("Id")
                        .HasName("pk_instructors");

                    b.ToTable("instructors", "uni_sphere");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.InstructorLabLink", b =>
                {
                    b.Property<Guid>("InstructorId")
                        .HasColumnType("uuid")
                        .HasColumnName("instructor_id");

                    b.Property<Guid>("LabId")
                        .HasColumnType("uuid")
                        .HasColumnName("lab_id");

                    b.HasKey("InstructorId", "LabId")
                        .HasName("pk_instructor_lab_link");

                    b.HasIndex("LabId")
                        .HasDatabaseName("ix_instructor_lab_link_lab_id");

                    b.ToTable("instructor_lab_link", "uni_sphere");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.Lab", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<MultilingualText>("Description")
                        .HasColumnType("jsonb")
                        .HasColumnName("description");

                    b.Property<string>("Image")
                        .HasColumnType("text")
                        .HasColumnName("image");

                    b.Property<MultilingualText>("Name")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_labs");

                    b.ToTable("labs", "uni_sphere");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.Lecture", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("interval")
                        .HasColumnName("end_time");

                    b.Property<MultilingualText>("LectureHall")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("lecture_hall");

                    b.Property<MultilingualText>("LecturerName")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("lecturer_name");

                    b.Property<Guid>("ScheduleId")
                        .HasColumnType("uuid")
                        .HasColumnName("schedule_id");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("interval")
                        .HasColumnName("start_time");

                    b.Property<MultilingualText>("SubjectName")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("subject_name");

                    b.HasKey("Id")
                        .HasName("pk_lectures");

                    b.HasIndex("ScheduleId")
                        .HasDatabaseName("ix_lectures_schedule_id");

                    b.ToTable("lectures", "uni_sphere");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.Major", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("FacultyId")
                        .HasColumnType("uuid")
                        .HasColumnName("faculty_id");

                    b.Property<MultilingualText>("Name")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("name");

                    b.Property<int>("NumberOfYears")
                        .HasColumnType("integer")
                        .HasColumnName("number_of_years");

                    b.HasKey("Id")
                        .HasName("pk_majors");

                    b.HasIndex("FacultyId")
                        .HasDatabaseName("ix_majors_faculty_id");

                    b.ToTable("majors", "uni_sphere");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.MajorAnnouncement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<MultilingualText>("Content")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("content");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<Guid>("MajorId")
                        .HasColumnType("uuid")
                        .HasColumnName("major_id");

                    b.Property<Guid>("SubjectId")
                        .HasColumnType("uuid")
                        .HasColumnName("subject_id");

                    b.Property<MultilingualText>("Title")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("title");

                    b.Property<int>("Year")
                        .HasColumnType("integer")
                        .HasColumnName("year");

                    b.HasKey("Id")
                        .HasName("pk_major_announcements");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("ix_major_announcements_created_at");

                    b.HasIndex("MajorId")
                        .HasDatabaseName("ix_major_announcements_major_id");

                    b.HasIndex("SubjectId")
                        .HasDatabaseName("ix_major_announcements_subject_id");

                    b.ToTable("major_announcements", "uni_sphere");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.Professor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<MultilingualText>("Bio")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("bio");

                    b.Property<MultilingualText>("FirstName")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("first_name");

                    b.Property<string>("Gmail")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("gmail");

                    b.Property<string>("Image")
                        .HasColumnType("text")
                        .HasColumnName("image");

                    b.Property<MultilingualText>("LastName")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("last_name");

                    b.Property<int?>("OneTimeCode")
                        .HasColumnType("integer")
                        .HasColumnName("one_time_code");

                    b.Property<DateTime?>("OneTimeCodeCreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("one_time_code_created_date");

                    b.Property<int?>("OneTimeCodeExpirationInMinutes")
                        .HasColumnType("integer")
                        .HasColumnName("one_time_code_expiration_in_minutes");

                    b.HasKey("Id")
                        .HasName("pk_professors");

                    b.ToTable("professors", "uni_sphere");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.ProfessorFacultyLink", b =>
                {
                    b.Property<Guid>("ProfessorId")
                        .HasColumnType("uuid")
                        .HasColumnName("professor_id");

                    b.Property<Guid>("FacultyId")
                        .HasColumnType("uuid")
                        .HasColumnName("faculty_id");

                    b.HasKey("ProfessorId", "FacultyId")
                        .HasName("pk_professor_faculty_links");

                    b.HasIndex("FacultyId")
                        .HasDatabaseName("ix_professor_faculty_links_faculty_id");

                    b.ToTable("professor_faculty_links", "uni_sphere");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.Schedule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid?>("FacultyId")
                        .HasColumnType("uuid")
                        .HasColumnName("faculty_id");

                    b.Property<Guid>("MajorId")
                        .HasColumnType("uuid")
                        .HasColumnName("major_id");

                    b.Property<DateOnly>("ScheduleDate")
                        .HasColumnType("date")
                        .HasColumnName("schedule_date");

                    b.Property<int>("Year")
                        .HasColumnType("integer")
                        .HasColumnName("year");

                    b.HasKey("Id")
                        .HasName("pk_schedules");

                    b.HasIndex("FacultyId")
                        .HasDatabaseName("ix_schedules_faculty_id");

                    b.HasIndex("MajorId")
                        .HasDatabaseName("ix_schedules_major_id");

                    b.ToTable("schedules", "uni_sphere");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.ScheduleLabLink", b =>
                {
                    b.Property<Guid>("ScheduleId")
                        .HasColumnType("uuid")
                        .HasColumnName("schedule_id");

                    b.Property<Guid>("LabId")
                        .HasColumnType("uuid")
                        .HasColumnName("lab_id");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("interval")
                        .HasColumnName("end_time");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("interval")
                        .HasColumnName("start_time");

                    b.HasKey("ScheduleId", "LabId")
                        .HasName("pk_schedule_lab_links");

                    b.HasIndex("LabId")
                        .HasDatabaseName("ix_schedule_lab_links_lab_id");

                    b.ToTable("schedule_lab_links", "uni_sphere");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.StudentCredential", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("EnrollmentStatusId")
                        .HasColumnType("uuid")
                        .HasColumnName("enrollment_status_id");

                    b.Property<MultilingualText>("FatherName")
                        .HasColumnType("jsonb")
                        .HasColumnName("father_name");

                    b.Property<MultilingualText>("FirstName")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("first_name");

                    b.Property<string>("IdentityId")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("identity_id");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("image");

                    b.Property<MultilingualText>("LastName")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("last_name");

                    b.Property<Guid>("MajorId")
                        .HasColumnType("uuid")
                        .HasColumnName("major_id");

                    b.Property<int?>("OneTimeCode")
                        .HasColumnType("integer")
                        .HasColumnName("one_time_code");

                    b.Property<DateTime?>("OneTimeCodeCreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("one_time_code_created_date");

                    b.Property<int?>("OneTimeCodeExpirationInMinutes")
                        .HasColumnType("integer")
                        .HasColumnName("one_time_code_expiration_in_minutes");

                    b.Property<string>("StudentNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("student_number");

                    b.Property<int>("Year")
                        .HasColumnType("integer")
                        .HasColumnName("year");

                    b.HasKey("Id")
                        .HasName("pk_student_credentials");

                    b.HasIndex("EnrollmentStatusId")
                        .HasDatabaseName("ix_student_credentials_enrollment_status_id");

                    b.HasIndex("IdentityId")
                        .IsUnique()
                        .HasDatabaseName("ix_student_credentials_identity_id");

                    b.HasIndex("MajorId")
                        .HasDatabaseName("ix_student_credentials_major_id");

                    b.HasIndex("StudentNumber", "MajorId")
                        .IsUnique()
                        .HasDatabaseName("ix_student_credentials_student_number_major_id");

                    b.ToTable("student_credentials", "uni_sphere");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.StudentStatistics", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<double>("NumberOfAttendanceHours")
                        .HasColumnType("double precision")
                        .HasColumnName("number_of_attendance_hours");

                    b.Property<int>("NumberOfAttendanceLectures")
                        .HasColumnType("integer")
                        .HasColumnName("number_of_attendance_lectures");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uuid")
                        .HasColumnName("student_id");

                    b.HasKey("Id")
                        .HasName("pk_student_statistics");

                    b.HasIndex("StudentId")
                        .IsUnique()
                        .HasDatabaseName("ix_student_statistics_student_id");

                    b.ToTable("student_statistics", "uni_sphere");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.Subject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<MultilingualText>("Description")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("description");

                    b.Property<int>("FinalGrade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(70)
                        .HasColumnName("final_grade");

                    b.Property<string>("Image")
                        .HasColumnType("text")
                        .HasColumnName("image");

                    b.Property<bool>("IsLabRequired")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_lab_required");

                    b.Property<bool>("IsMultipleChoice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_multiple_choice");

                    b.Property<bool>("IsOpenBook")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_open_book");

                    b.Property<Guid?>("LabId")
                        .HasColumnType("uuid")
                        .HasColumnName("lab_id");

                    b.Property<Guid>("MajorId")
                        .HasColumnType("uuid")
                        .HasColumnName("major_id");

                    b.Property<int>("MidtermGrade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(30)
                        .HasColumnName("midterm_grade");

                    b.Property<MultilingualText>("Name")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("name");

                    b.Property<int>("Semester")
                        .HasColumnType("integer")
                        .HasColumnName("semester");

                    b.Property<int>("Year")
                        .HasColumnType("integer")
                        .HasColumnName("year");

                    b.HasKey("Id")
                        .HasName("pk_subjects");

                    b.HasIndex("LabId")
                        .HasDatabaseName("ix_subjects_lab_id");

                    b.HasIndex("MajorId")
                        .HasDatabaseName("ix_subjects_major_id");

                    b.ToTable("subjects", "uni_sphere");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.SubjectProfessorLink", b =>
                {
                    b.Property<Guid>("SubjectId")
                        .HasColumnType("uuid")
                        .HasColumnName("subject_id");

                    b.Property<Guid>("ProfessorId")
                        .HasColumnType("uuid")
                        .HasColumnName("professor_id");

                    b.HasKey("SubjectId", "ProfessorId")
                        .HasName("pk_subject_professor_links");

                    b.HasIndex("ProfessorId")
                        .HasDatabaseName("ix_subject_professor_links_professor_id");

                    b.ToTable("subject_professor_links", "uni_sphere");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.SubjectStudentLink", b =>
                {
                    b.Property<Guid>("SubjectId")
                        .HasColumnType("uuid")
                        .HasColumnName("subject_id");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uuid")
                        .HasColumnName("student_id");

                    b.Property<int>("AttemptNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1)
                        .HasColumnName("attempt_number");

                    b.Property<double?>("FinalGrade")
                        .HasColumnType("double precision")
                        .HasColumnName("final_grade");

                    b.Property<bool>("IsCurrentlyEnrolled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_currently_enrolled");

                    b.Property<bool>("IsPassed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_passed");

                    b.Property<double?>("MidtermGrade")
                        .HasColumnType("double precision")
                        .HasColumnName("midterm_grade");

                    b.Property<MultilingualText>("Notes")
                        .HasColumnType("jsonb")
                        .HasColumnName("notes");

                    b.HasKey("SubjectId", "StudentId")
                        .HasName("pk_subject_student_links");

                    b.HasIndex("StudentId")
                        .HasDatabaseName("ix_subject_student_links_student_id");

                    b.ToTable("subject_student_links", "uni_sphere");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.SuperAdmin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("FacultyId")
                        .HasColumnType("uuid")
                        .HasColumnName("faculty_id");

                    b.Property<MultilingualText>("FirstName")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("first_name");

                    b.Property<string>("Gmail")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("gmail");

                    b.Property<MultilingualText>("LastName")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("last_name");

                    b.Property<int?>("OneTimeCode")
                        .HasColumnType("integer")
                        .HasColumnName("one_time_code");

                    b.Property<DateTime?>("OneTimeCodeCreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("one_time_code_created_date");

                    b.Property<int?>("OneTimeCodeExpirationInMinutes")
                        .HasColumnType("integer")
                        .HasColumnName("one_time_code_expiration_in_minutes");

                    b.HasKey("Id")
                        .HasName("pk_super_admins");

                    b.HasIndex("FacultyId")
                        .HasDatabaseName("ix_super_admins_faculty_id");

                    b.ToTable("super_admins", "uni_sphere");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.University", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<MultilingualText>("Name")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("name");

                    b.Property<MultilingualText>("Type")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("pk_universities");

                    b.ToTable("universities", "uni_sphere");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.Admin", b =>
                {
                    b.HasOne("UniSphere.Api.Entities.Major", "Major")
                        .WithMany()
                        .HasForeignKey("MajorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_admins_majors_major_id");

                    b.Navigation("Major");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.Faculty", b =>
                {
                    b.HasOne("UniSphere.Api.Entities.University", "University")
                        .WithMany("Faculties")
                        .HasForeignKey("UniversityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_faculties_universities_university_id");

                    b.Navigation("University");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.FacultyAnnouncement", b =>
                {
                    b.HasOne("UniSphere.Api.Entities.Faculty", "Faculty")
                        .WithMany("FacultyAnnouncements")
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_faculty_announcements_faculties_faculty_id");

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.InstructorLabLink", b =>
                {
                    b.HasOne("UniSphere.Api.Entities.Instructor", "Instructor")
                        .WithMany("InstructorLabLinks")
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_instructor_lab_link_instructors_instructor_id");

                    b.HasOne("UniSphere.Api.Entities.Lab", "Lab")
                        .WithMany("InstructorLabLinks")
                        .HasForeignKey("LabId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_instructor_lab_link_labs_lab_id");

                    b.Navigation("Instructor");

                    b.Navigation("Lab");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.Lecture", b =>
                {
                    b.HasOne("UniSphere.Api.Entities.Schedule", "Schedule")
                        .WithMany("Lectures")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_lectures_schedules_schedule_id");

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.Major", b =>
                {
                    b.HasOne("UniSphere.Api.Entities.Faculty", "Faculty")
                        .WithMany("Majors")
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_majors_faculties_faculty_id");

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.MajorAnnouncement", b =>
                {
                    b.HasOne("UniSphere.Api.Entities.Major", "Major")
                        .WithMany("MajorAnnouncements")
                        .HasForeignKey("MajorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_major_announcements_majors_major_id");

                    b.HasOne("UniSphere.Api.Entities.Subject", "Subject")
                        .WithMany("MajorAnnouncements")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_major_announcements_subjects_subject_id");

                    b.Navigation("Major");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.ProfessorFacultyLink", b =>
                {
                    b.HasOne("UniSphere.Api.Entities.Faculty", "Faculty")
                        .WithMany("ProfessorFacultyLinks")
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_professor_faculty_links_faculties_faculty_id");

                    b.HasOne("UniSphere.Api.Entities.Professor", "Professor")
                        .WithMany("ProfessorFacultyLinks")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_professor_faculty_links_professors_professor_id");

                    b.Navigation("Faculty");

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.Schedule", b =>
                {
                    b.HasOne("UniSphere.Api.Entities.Faculty", null)
                        .WithMany("Schedules")
                        .HasForeignKey("FacultyId")
                        .HasConstraintName("fk_schedules_faculties_faculty_id");

                    b.HasOne("UniSphere.Api.Entities.Major", "Major")
                        .WithMany("Schedules")
                        .HasForeignKey("MajorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_schedules_majors_major_id");

                    b.Navigation("Major");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.ScheduleLabLink", b =>
                {
                    b.HasOne("UniSphere.Api.Entities.Lab", "Lab")
                        .WithMany("ScheduleLabLinks")
                        .HasForeignKey("LabId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_schedule_lab_links_labs_lab_id");

                    b.HasOne("UniSphere.Api.Entities.Schedule", "Schedule")
                        .WithMany("ScheduleLabLinks")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_schedule_lab_links_schedules_schedule_id");

                    b.Navigation("Lab");

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.StudentCredential", b =>
                {
                    b.HasOne("UniSphere.Api.Entities.EnrollmentStatus", "EnrollmentStatus")
                        .WithMany("StudentCredentials")
                        .HasForeignKey("EnrollmentStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_student_credentials_enrollment_statuses_enrollment_status_id");

                    b.HasOne("UniSphere.Api.Entities.Major", "Major")
                        .WithMany("StudentCredentials")
                        .HasForeignKey("MajorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_student_credentials_majors_major_id");

                    b.Navigation("EnrollmentStatus");

                    b.Navigation("Major");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.StudentStatistics", b =>
                {
                    b.HasOne("UniSphere.Api.Entities.StudentCredential", "Student")
                        .WithOne("StudentStatistics")
                        .HasForeignKey("UniSphere.Api.Entities.StudentStatistics", "StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_student_statistics_student_credentials_student_id");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.Subject", b =>
                {
                    b.HasOne("UniSphere.Api.Entities.Lab", "Lab")
                        .WithMany("Subjects")
                        .HasForeignKey("LabId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_subjects_labs_lab_id");

                    b.HasOne("UniSphere.Api.Entities.Major", "Major")
                        .WithMany("Subjects")
                        .HasForeignKey("MajorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_subjects_majors_major_id");

                    b.Navigation("Lab");

                    b.Navigation("Major");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.SubjectProfessorLink", b =>
                {
                    b.HasOne("UniSphere.Api.Entities.Professor", "Professor")
                        .WithMany("SubjectProfessorLinks")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_subject_professor_links_professors_professor_id");

                    b.HasOne("UniSphere.Api.Entities.Subject", "Subject")
                        .WithMany("SubjectLecturers")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_subject_professor_links_subjects_subject_id");

                    b.Navigation("Professor");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.SubjectStudentLink", b =>
                {
                    b.HasOne("UniSphere.Api.Entities.StudentCredential", "StudentCredential")
                        .WithMany("SubjectStudentLinks")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_subject_student_links_student_credentials_student_id");

                    b.HasOne("UniSphere.Api.Entities.Subject", "Subject")
                        .WithMany("SubjectStudentLinks")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_subject_student_links_subjects_subject_id");

                    b.Navigation("StudentCredential");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.SuperAdmin", b =>
                {
                    b.HasOne("UniSphere.Api.Entities.Faculty", "Faculty")
                        .WithMany()
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_super_admins_faculties_faculty_id");

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.EnrollmentStatus", b =>
                {
                    b.Navigation("StudentCredentials");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.Faculty", b =>
                {
                    b.Navigation("FacultyAnnouncements");

                    b.Navigation("Majors");

                    b.Navigation("ProfessorFacultyLinks");

                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.Instructor", b =>
                {
                    b.Navigation("InstructorLabLinks");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.Lab", b =>
                {
                    b.Navigation("InstructorLabLinks");

                    b.Navigation("ScheduleLabLinks");

                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.Major", b =>
                {
                    b.Navigation("MajorAnnouncements");

                    b.Navigation("Schedules");

                    b.Navigation("StudentCredentials");

                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.Professor", b =>
                {
                    b.Navigation("ProfessorFacultyLinks");

                    b.Navigation("SubjectProfessorLinks");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.Schedule", b =>
                {
                    b.Navigation("Lectures");

                    b.Navigation("ScheduleLabLinks");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.StudentCredential", b =>
                {
                    b.Navigation("StudentStatistics")
                        .IsRequired();

                    b.Navigation("SubjectStudentLinks");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.Subject", b =>
                {
                    b.Navigation("MajorAnnouncements");

                    b.Navigation("SubjectLecturers");

                    b.Navigation("SubjectStudentLinks");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.University", b =>
                {
                    b.Navigation("Faculties");
                });
#pragma warning restore 612, 618
        }
    }
}
