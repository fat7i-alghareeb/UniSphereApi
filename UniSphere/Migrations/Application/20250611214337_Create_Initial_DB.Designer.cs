// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using UniSphere.Api.Database;
using UniSphere.Api.Entities;

#nullable disable

namespace UniSphere.Api.Migrations.Application
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250611214337_Create_Initial_DB")]
    partial class Create_Initial_DB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("uni_sphere")
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("UniSphere.Api.Entities.EnrollmentStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<MultilingualText>("Name")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.HasKey("Id");

                    b.ToTable("EnrollmentStatuses", "uni_sphere");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.Faculty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<MultilingualText>("Name")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<Guid>("UniversityId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UniversityId");

                    b.ToTable("Faculties", "uni_sphere");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.Instructor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<MultilingualText>("FatherName")
                        .HasColumnType("jsonb");

                    b.Property<MultilingualText>("FirstName")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<MultilingualText>("LastName")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.ToTable("Instructors", "uni_sphere");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.InstructorLabLink", b =>
                {
                    b.Property<Guid>("InstructorId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("LabId")
                        .HasColumnType("uuid");

                    b.HasKey("InstructorId", "LabId");

                    b.HasIndex("LabId");

                    b.ToTable("InstructorLabLink", "uni_sphere");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.Lab", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<MultilingualText>("Description")
                        .HasColumnType("jsonb");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<MultilingualText>("Name")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.HasKey("Id");

                    b.ToTable("Labs", "uni_sphere");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.Lecture", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("interval");

                    b.Property<MultilingualText>("LectureHall")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<MultilingualText>("LecturerName")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<Guid>("ScheduleId")
                        .HasColumnType("uuid");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("interval");

                    b.Property<MultilingualText>("SubjectName")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleId");

                    b.ToTable("Lectures", "uni_sphere");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.Major", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("FacultyId")
                        .HasColumnType("uuid");

                    b.Property<MultilingualText>("Name")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<int>("NumberOfYears")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FacultyId");

                    b.ToTable("Majors", "uni_sphere");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.Professor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<MultilingualText>("FirstName")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<MultilingualText>("LastName")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.HasKey("Id");

                    b.ToTable("Professors", "uni_sphere");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.Schedule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("FacultyId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("MajorId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ScheduleDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FacultyId");

                    b.HasIndex("MajorId");

                    b.ToTable("Schedules", "uni_sphere");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.StudentCredential", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("FacultyId")
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid>("EnrollmentStatusId")
                        .HasColumnType("uuid");

                    b.Property<MultilingualText>("FatherName")
                        .HasColumnType("jsonb");

                    b.Property<MultilingualText>("FirstName")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<MultilingualText>("LastName")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<Guid>("MajorId")
                        .HasColumnType("uuid");

                    b.Property<int?>("OneTimeCode")
                        .HasColumnType("integer");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Id", "FacultyId");

                    b.HasIndex("EnrollmentStatusId");

                    b.HasIndex("MajorId");

                    b.ToTable("StudentCredentials", "uni_sphere");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.Subject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<MultilingualText>("Description")
                        .HasColumnType("jsonb");

                    b.Property<int>("FinalGrade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(70);

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<bool>("IsLabRequired")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsMultipleChoice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsOpenBook")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<Guid?>("LabId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("MajorId")
                        .HasColumnType("uuid");

                    b.Property<int>("MidtermGrade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(30);

                    b.Property<MultilingualText>("Name")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<int>("Semester")
                        .HasColumnType("integer");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LabId");

                    b.HasIndex("MajorId");

                    b.ToTable("Subjects", "uni_sphere");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.SubjectProfessorLink", b =>
                {
                    b.Property<Guid>("SubjectId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProfessorId")
                        .HasColumnType("uuid");

                    b.HasKey("SubjectId", "ProfessorId");

                    b.HasIndex("ProfessorId");

                    b.ToTable("SubjectProfessorLinks", "uni_sphere");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.SubjectStudentLink", b =>
                {
                    b.Property<Guid>("SubjectId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("FacultyId")
                        .HasColumnType("uuid");

                    b.Property<int>("AttemptNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1);

                    b.Property<int?>("FinalGrade")
                        .HasColumnType("integer");

                    b.Property<bool>("IsCurrentlyEnrolled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool?>("IsPassed")
                        .HasColumnType("boolean");

                    b.Property<int?>("MidtermGrade")
                        .HasColumnType("integer");

                    b.Property<MultilingualText>("Notes")
                        .HasColumnType("jsonb");

                    b.HasKey("SubjectId", "StudentId", "FacultyId");

                    b.HasIndex("StudentId", "FacultyId");

                    b.ToTable("SubjectStudentLinks", "uni_sphere");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.University", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<MultilingualText>("Name")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<MultilingualText>("Type")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.HasKey("Id");

                    b.ToTable("Universities", "uni_sphere");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.Faculty", b =>
                {
                    b.HasOne("UniSphere.Api.Entities.University", "University")
                        .WithMany("Faculties")
                        .HasForeignKey("UniversityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("University");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.InstructorLabLink", b =>
                {
                    b.HasOne("UniSphere.Api.Entities.Instructor", "Instructor")
                        .WithMany("InstructorLabLinks")
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniSphere.Api.Entities.Lab", "Lab")
                        .WithMany("InstructorLabLinks")
                        .HasForeignKey("LabId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instructor");

                    b.Navigation("Lab");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.Lecture", b =>
                {
                    b.HasOne("UniSphere.Api.Entities.Schedule", "Schedule")
                        .WithMany("Lectures")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.Major", b =>
                {
                    b.HasOne("UniSphere.Api.Entities.Faculty", "Faculty")
                        .WithMany("Majors")
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.Schedule", b =>
                {
                    b.HasOne("UniSphere.Api.Entities.Faculty", null)
                        .WithMany("Schedules")
                        .HasForeignKey("FacultyId");

                    b.HasOne("UniSphere.Api.Entities.Major", "Major")
                        .WithMany("Schedules")
                        .HasForeignKey("MajorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Major");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.StudentCredential", b =>
                {
                    b.HasOne("UniSphere.Api.Entities.EnrollmentStatus", "EnrollmentStatus")
                        .WithMany("StudentCredentials")
                        .HasForeignKey("EnrollmentStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("UniSphere.Api.Entities.Major", "Major")
                        .WithMany("StudentCredentials")
                        .HasForeignKey("MajorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EnrollmentStatus");

                    b.Navigation("Major");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.Subject", b =>
                {
                    b.HasOne("UniSphere.Api.Entities.Lab", "Lab")
                        .WithMany("Subjects")
                        .HasForeignKey("LabId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("UniSphere.Api.Entities.Major", "Major")
                        .WithMany("Subjects")
                        .HasForeignKey("MajorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Lab");

                    b.Navigation("Major");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.SubjectProfessorLink", b =>
                {
                    b.HasOne("UniSphere.Api.Entities.Professor", "Professor")
                        .WithMany("SubjectProfessorLinks")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniSphere.Api.Entities.Subject", "Subject")
                        .WithMany("SubjectLecturers")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Professor");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.SubjectStudentLink", b =>
                {
                    b.HasOne("UniSphere.Api.Entities.Subject", "Subject")
                        .WithMany("SubjectStudentLinks")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("UniSphere.Api.Entities.StudentCredential", "StudentCredential")
                        .WithMany("SubjectStudentLinks")
                        .HasForeignKey("StudentId", "FacultyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("StudentCredential");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.EnrollmentStatus", b =>
                {
                    b.Navigation("StudentCredentials");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.Faculty", b =>
                {
                    b.Navigation("Majors");

                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.Instructor", b =>
                {
                    b.Navigation("InstructorLabLinks");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.Lab", b =>
                {
                    b.Navigation("InstructorLabLinks");

                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.Major", b =>
                {
                    b.Navigation("Schedules");

                    b.Navigation("StudentCredentials");

                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.Professor", b =>
                {
                    b.Navigation("SubjectProfessorLinks");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.Schedule", b =>
                {
                    b.Navigation("Lectures");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.StudentCredential", b =>
                {
                    b.Navigation("SubjectStudentLinks");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.Subject", b =>
                {
                    b.Navigation("SubjectLecturers");

                    b.Navigation("SubjectStudentLinks");
                });

            modelBuilder.Entity("UniSphere.Api.Entities.University", b =>
                {
                    b.Navigation("Faculties");
                });
#pragma warning restore 612, 618
        }
    }
}
